{"version":3,"sources":["services/noteService.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","newObject","axios","post","get","id","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","successMessage","setSuccessMessage","failedMessage","setFailedMessage","Notification","message","success","className","useEffect","noteService","then","response","data","personsToShow","person","name","toLowerCase","includes","value","onChange","event","target","onSubmit","preventDefault","map","window","confirm","find","changedPerson","number","concat","setTimeout","type","onClick","p","console","log","catch","error","removePerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6fabc367.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst remove = id => {\n    return axios.delete(baseUrl + '/' + id)\n}\n\nconst update = newObject => {\n    return axios.put(baseUrl + '/' + newObject.id, newObject)\n}\n\nexport default {\n    create,\n    getAll,\n    remove,\n    update\n}\n\n","import React, { useState, useEffect } from 'react'\nimport noteService from './services/noteService'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ successMessage, setSuccessMessage] = useState(null)\n  const [ failedMessage, setFailedMessage] = useState(null)\n\n  const Notification = ({ message, success }) => {\n    if (message === null) {\n      return null\n    } else if (success === true) {\n      return (\n        <div className='successMessage'>\n          {message}\n        </div>\n      )\n    } else {\n      return (\n        <div className='failedMessage'>\n          {message}\n        </div>\n      )\n    }\n  }\n\n  useEffect(() => {\n    noteService.getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const handleNameAdd = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberAdd = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person => \n    person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map(person => person.name).includes(newName)) {\n      const r = window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')\n      if (r === true) {\n        const person = persons.find(person => person.name === newName)\n        const changedPerson = {...person, number: newNumber}\n        noteService.update(changedPerson)\n      }\n    } else {\n      const name = {\n        name: newName,\n        number: newNumber\n      }\n      noteService\n        .create(name)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n        })\n\n      setSuccessMessage('Added ' + name.name)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      }, 3000)\n      }\n  }\n\n  const removePerson = (person) => {\n    noteService\n      .remove(person.id)\n      .then(response => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        console.log(response)\n      })\n      .catch(error => {\n        setFailedMessage('Information of ' + person.name + 'has already been removed from server')\n        setTimeout(() => {\n        setFailedMessage(null)\n        }, 3000)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} success={true}/>\n      <Notification message={failedMessage} success={false}/>\n      <div>\n        filter shown with <input value={filter} onChange={handleFilter}/>\n      </div>\n      <h2>add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameAdd}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberAdd}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n        {personsToShow.map(person =>\n          <p key={person.name}>\n            {person.name} {person.number} <button onClick={() => removePerson(person)}>Delete</button>\n          </p>\n        )}\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}